#!/bin/bash

# Redprine
#
# Downloads and caches GitHub PRs. Update the associated Redmine issue of any
# new PRs authored by the owner.

GITHUB_TOKEN=''
GITHUB_USERNAME=''

REDMINE_BASE_URL=''

CACHE_FILE="$HOME/redprine.json"

function github_owner_repo () {
	local git_remote=$(git remote get-url origin)
	local owner_repo=$(echo "$git_remote" |
		sed -e 's/git@github.com://' \
			-e 's/.git$//')

	echo "$owner_repo"
}

function fetch_pull_requests () {
	local owner_repo=$(github_owner_repo)
	local pull_requests=$(curl \
		--silent \
		--header 'Accept:application/vnd.github.v3+json' \
		--header "Authorization: Bearer ${GITHUB_TOKEN}" \
		--location "https://api.github.com/repos/${owner_repo}/pulls")

	echo $pull_requests
}

# fetch_pull_requests

function cache_my_pull_requests () {
	local pull_requests="$1"

	local my_pull_requests=$(
		printf "%s\n" "$pull_requests" |
		jq '. |
			map({
				html_url,
				number,
				user: .user.login,
				ref: .head.ref,
				created_at
			}) |
			map(
				select(.user == "teddywing")
			)'
	)

	echo $my_pull_requests > "$CACHE_FILE"
}

# branch_heads=$(printf "%s\n" "$pull_requests" |
# 	jq '. | map([.["html_url"], .["head"]["label"]]) | .[] | @tsv' --raw-output)

# jq -C '. | map({ html_url, number, user: .user.login, ref: .head.ref, created_at })' pulls.json
# jq -C '. | map({ html_url, number, user: .user.login, ref: .head.ref, created_at }) | map(select(.user == "teddywing"))' pulls.json

# pull_requests=$(fetch_pull_requests)
# cache_my_pull_requests "$pull_requests"

# function compare_with_cache () {
function new_pull_requests () {
	local pull_requests=$(fetch_pull_requests)

	local new=$(jq "${pull_requests} - ." "$CACHE_FILE")

	echo "$new"
}

# jq '[ { "html_url": "https://github.com/owner/repo/pull/487", "number": 487, "user": "teddywing", "ref": "9999-this-is-a-test", "created_at": "2018-04-16T16:17:52Z" } ] - .' pulls-my.json  #=> []
# jq '[ { "html_url": "https://github.com/owner/repo/pull/487", "number": 487, "user": "teddywing", "ref": "9999-this-is-a-test", "created_at": "2018-04-16T16:17:52Z" } ] - . | length' pulls-my.json  #=> 0

function extract_redmine_issue_numbers_from_pull_request () {
	local pull_requests="$1"

	local branch_names=$(
		printf "%s\n" "$pull_requests" |
		jq --raw-output 'map(.ref) | .[] | @text'
	)

	# Issue IDs are 4-digit prefixes to branch names.
	local issue_ids=$(
		echo "$branch_names" |
		perl -ne '/^(\d{4})-/ && print "$1\n"'
	)

	echo "$issue_ids"
}

# jq --raw-output 'map(.ref) | .[] | @text' pulls-my.json
# jq --raw-output 'map(.ref) | .[] | @text' pulls-my.json | perl -ne '/^(\d{4})-/ && print "$1\n"'

# jq --raw-output '. | map({ html_url, number, user: .user.login, ref: .head.ref, created_at }) | map(select(.user == "teddywing")) | map([.ref, .html_url]) | .[] | @tsv' pulls.json

function branches_and_pull_request_urls () {
	local pull_requests="$1"

	printf "%s\n" "$pull_requests" |
		jq --raw-output 'map([.ref, .html_url]) | .[] | @tsv'
}

function issue_numbers_and_pull_request_urls () {
	local pull_requests="$1"

	local branch_and_urls=$(branches_and_pull_request_urls "$pull_requests")

	echo "$branch_and_urls" |
		perl -ne '/^(\d{4})-[^\t]*\t(.*)/ && print "$1\t$2\n"'
}

# jq --raw-output '. | map({ html_url, number, user: .user.login, ref: .head.ref, created_at }) | map(select(.user == "teddywing")) | map([.ref, .html_url]) | .[] | @tsv' pulls.json | perl -ne '/^(\d{4})-[^\t]*\t(.*)/ && print "$1\t$2\n"'

# Updates the "Done", "Status", and "Pull Request" fields for each given issue.
function update_redmine_statuses () {
	local issue_ids_and_urls="$1"

	for id_and_url in "$issue_ids_and_urls"; do
		update_redmine_status "$id_and_url"
	done
}

function update_redmine_status () {
	local issue_pr="$1"

	local issue_id=$(
		echo "$issue_pr" |
		cut -d '	' -f 1 -
	)

	local pull_request_link=$(
		echo "$issue_pr" |
		cut -d '	' -f 2 -
	)

	curl \
		--request PUT \
		--location "${REDMINE_BASE_URL}/issues/${issue_id}.json"
}



# pull_requests=$(fetch_pull_requests)
# cache_my_pull_requests "$pull_requests"
pr_json=$(new_pull_requests)
issue_prs=$(issue_numbers_and_pull_request_urls "$pr_json")

update_redmine_statuses "$issue_prs"
